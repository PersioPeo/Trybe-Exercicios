{"ast":null,"code":"var _jsxFileName = \"/home/persiopeo/\\xC1rea de Trabalho/trybe/Trybe-Exercicios/front-end/bloco-10-introducao-a-react/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/app-11/src/exe-11.js/Clicou.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clicou extends React.Component {\n  constructor() {\n    super(); // A função abaixo vincula \"manualmente\" o `this` à nossa função\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    /* Agora esse log retorna o objeto `this`, já acessível para nossa função!\n    Com isso, podemos acessar as `props`, estado do componente (ainda vamos ver como!)\n    e tudo o mais daqui de dentro */\n    console.log(this);\n    alert('Clicou!');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: \"Meu bot\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Clicou;","map":{"version":3,"sources":["/home/persiopeo/Área de Trabalho/trybe/Trybe-Exercicios/front-end/bloco-10-introducao-a-react/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/app-11/src/exe-11.js/Clicou.js"],"names":["React","Clicou","Component","constructor","handleClick","bind","console","log","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ;AACJ;AACA;AACIE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAC,IAAAA,KAAK,CAAC,SAAD,CAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKL,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAjBkC;;AAoBrC,eAAeH,MAAf","sourcesContent":["import React from 'react';\n\nclass Clicou extends React.Component {\n  constructor() {\n    super()\n    // A função abaixo vincula \"manualmente\" o `this` à nossa função\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    /* Agora esse log retorna o objeto `this`, já acessível para nossa função!\n    Com isso, podemos acessar as `props`, estado do componente (ainda vamos ver como!)\n    e tudo o mais daqui de dentro */\n    console.log(this)\n    alert('Clicou!')\n  }\n\n  render() {\n    return <button onClick={this.handleClick}>Meu botão</button>\n  }\n}\n\nexport default Clicou;"]},"metadata":{},"sourceType":"module"}